plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}
group 'org.example'
version '1.0-SNAPSHOT'

def allureVersion = "2.16.0",
    selenideVersion = "5.24.0",
    junitVersion = "5.8.1"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


allure {
    report {
        version.set("$allureVersion")
    }
    adapter {
        aspectjVersion.set("1.9.7")
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("$allureVersion")
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aspectj:aspectjweaver:1.9.6",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.aeonbits.owner:owner:1.0.12",
            "com.github.javafaker:javafaker:1.0.2",)
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    testRuntimeOnly("org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task properties_tests(type: Test) {
    useJUnitPlatform {
        includeTags "properties"
    }
}

task all_tests(type: Test) {
    useJUnitPlatform {
        includeTags "properties"
        includeTags "owner"
    }
}